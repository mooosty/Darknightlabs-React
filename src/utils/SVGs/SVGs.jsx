export const ListIcon = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
            <path d="M3 4.5H21" stroke="#E6EAEE" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
            <path d="M3 9.5H21" stroke="#E6EAEE" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
            <path d="M3 14.5H21" stroke="#E6EAEE" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
            <path d="M3 19.5H21" stroke="#E6EAEE" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
        </svg>
    )
}

export const GridIcon = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
            <path d="M9 22H15C20 22 22 20 22 15V9C22 4 20 2 15 2H9C4 2 2 4 2 9V15C2 20 4 22 9 22Z" stroke="#E6EAEE" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
            <path d="M12 2V22" stroke="#E6EAEE" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
            <path d="M2 12H22" stroke="#E6EAEE" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
        </svg>
    )
}

export const StarIcon = () => {
    return (
        <svg width="17" height="17" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g>
                <path d="M10.76 3.97334L11.7 5.85333C11.8266 6.11333 12.1666 6.35999 12.4533 6.41333L14.1533 6.69333C15.24 6.87333 15.4933 7.66 14.7133 8.44666L13.3866 9.77333C13.1666 9.99333 13.04 10.4267 13.1133 10.74L13.4933 12.38C13.7933 13.6733 13.1 14.18 11.96 13.5L10.3666 12.5533C10.08 12.38 9.59997 12.38 9.3133 12.5533L7.71996 13.5C6.57996 14.1733 5.88663 13.6733 6.18663 12.38L6.56664 10.74C6.63997 10.4333 6.5133 10 6.2933 9.77333L4.96664 8.44666C4.18664 7.66666 4.43997 6.87999 5.52664 6.69333L7.22663 6.41333C7.5133 6.36666 7.8533 6.11333 7.97997 5.85333L8.91997 3.97334C9.41997 2.95334 10.2466 2.95334 10.76 3.97334Z" stroke=" rgb(245, 239, 219)" strokeLinecap="round" strokeLinejoin="round" />
                <path d="M5.83398 3.83334H1.83398" stroke=" rgba(245, 239, 219, 0.8)" strokeLinecap="round" strokeLinejoin="round" />
                <path d="M3.83398 13.1667H1.83398" stroke=" rgba(245, 239, 219, 0.8)" strokeLinecap="round" strokeLinejoin="round" />
                <path d="M2.50065 8.5H1.83398" stroke=" rgba(245, 239, 219, 0.8)" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
            </g>
        </svg>
    )
}

export const HealthIcon = () => {
    return (
        <svg width="17" height="17" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g>
                <path d="M6.47917 15.1667H10.4792C13.8125 15.1667 15.1458 13.8333 15.1458 10.5V6.5C15.1458 3.16667 13.8125 1.83334 10.4792 1.83334H6.47917C3.14583 1.83334 1.8125 3.16667 1.8125 6.5V10.5C1.8125 13.8333 3.14583 15.1667 6.47917 15.1667Z" stroke=" rgba(245, 239, 219, 0.8)" strokeLinecap="round" strokeLinejoin="round" />
                <path d="M1.8125 8.96667L5.8125 8.95333C6.3125 8.95333 6.8725 9.33333 7.05917 9.8L7.81917 11.72C7.9925 12.1533 8.26583 12.1533 8.43917 11.72L9.96583 7.84667C10.1125 7.47333 10.3858 7.46 10.5725 7.81333L11.2658 9.12667C11.4725 9.52 12.0058 9.84 12.4458 9.84H15.1525" stroke=" rgba(245, 239, 219, 0.8)" strokeLinecap="round" strokeLinejoin="round" />
            </g>
        </svg>
    )
}

export const GraphIcon = () => {
    return (
        <svg width="17" height="17" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12.7133 8.5C14.4467 8.5 15.1667 7.83334 14.5267 5.64667C14.0933 4.17334 12.8267 2.90667 11.3533 2.47334C9.16667 1.83334 8.5 2.55334 8.5 4.28667V6.20667C8.5 7.83334 9.16667 8.5 10.5 8.5H12.7133Z" stroke=" rgba(245, 239, 219, 0.8)" strokeLinecap="round" strokeLinejoin="round" />
            <path d="M13.833 10.3C13.213 13.3867 10.253 15.6267 6.88629 15.08C4.35963 14.6733 2.32629 12.64 1.91296 10.1133C1.37296 6.76 3.59963 3.8 6.67296 3.17333" stroke=" rgba(245, 239, 219, 0.8)" strokeLinecap="round" strokeLinejoin="round" />
        </svg>
    )
}

export const GradientGraphIcon = () => {
    const id = Math.round(Math.random() * 10000)
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
            <path d="M12.2133 7.99947C13.9467 7.99947 14.6667 7.3328 14.0267 5.14614C13.5933 3.6728 12.3267 2.40614 10.8533 1.9728C8.66667 1.3328 8 2.0528 8 3.78614V5.70614C8 7.3328 8.66667 7.99947 10 7.99947H12.2133Z" stroke={`url(#paint0_linear_257_15400_${id})`} strokeLinecap="round" strokeLinejoin="round" />
            <path d="M13.3334 9.80049C12.7134 12.8872 9.75345 15.1272 6.38678 14.5805C3.86012 14.1738 1.82678 12.1405 1.41345 9.61383C0.87345 6.26049 3.10012 3.30049 6.17345 2.67383" stroke={`url(#paint1_linear_257_15400_${id})`} strokeLinecap="round" strokeLinejoin="round" />
            <defs>
                <linearGradient id={`paint0_linear_257_15400_${id}`} x1="8.15262" y1="2.36791" x2="14.7291" y2="2.71788" gradientUnits="userSpaceOnUse">
                    <stop stopColor="#E68A02" />
                    <stop offset="1" stopColor="#DAB943" />
                </linearGradient>
                <linearGradient id={`paint1_linear_257_15400_${id}`} x1="1.62523" y1="3.87273" x2="14.2383" y2="4.5446" gradientUnits="userSpaceOnUse">
                    <stop stopColor="#E68A02" />
                    <stop offset="1" stopColor="#DAB943" />
                </linearGradient>
            </defs>
        </svg>
    )
}

export const GrammerlyIcon = () => {
    return (
        <svg width="17" height="17" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g>
                <path d="M13.2131 3.80001C15.8598 6.44668 15.8131 10.7667 13.0798 13.36C10.5531 15.7533 6.45315 15.7533 3.91981 13.36C1.17981 10.7667 1.13314 6.44668 3.78647 3.80001C6.38647 1.19334 10.6131 1.19334 13.2131 3.80001Z" stroke=" rgba(245, 239, 219, 0.8)" strokeLinecap="round" strokeLinejoin="round" />
                <path d="M11.0606 11.2133C9.64725 12.5467 7.35393 12.5467 5.94727 11.2133" stroke=" rgba(245, 239, 219, 0.8)" strokeLinecap="round" strokeLinejoin="round" />
            </g>
        </svg>
    )
}

export const GlobalIcon = () => {
    return (
        <svg width="16" height="17" viewBox="0 0 16 17" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M7.99967 15.1667C11.6816 15.1667 14.6663 12.1819 14.6663 8.5C14.6663 4.8181 11.6816 1.83333 7.99967 1.83333C4.31778 1.83333 1.33301 4.8181 1.33301 8.5C1.33301 12.1819 4.31778 15.1667 7.99967 15.1667Z" stroke=" rgba(245, 239, 219, 0.8)" strokeLinecap="round" strokeLinejoin="round" />
            <path d="M5.33372 2.5H6.00039C4.70039 6.39333 4.70039 10.6067 6.00039 14.5H5.33372" stroke=" rgba(245, 239, 219, 0.8)" strokeLinecap="round" strokeLinejoin="round" />
            <path d="M10 2.5C11.3 6.39333 11.3 10.6067 10 14.5" stroke=" rgba(245, 239, 219, 0.8)" strokeLinecap="round" strokeLinejoin="round" />
            <path d="M2 11.1667V10.5C5.89333 11.8 10.1067 11.8 14 10.5V11.1667" stroke=" rgba(245, 239, 219, 0.8)" strokeLinecap="round" strokeLinejoin="round" />
            <path d="M2 6.49999C5.89333 5.19999 10.1067 5.19999 14 6.49999" stroke=" rgba(245, 239, 219, 0.8)" strokeLinecap="round" strokeLinejoin="round" />
        </svg>
    )
}

export const GredientGlobalIcon = () => {
    const id = Math.round(Math.random() * 10000)
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
            <path d="M8.00016 14.6673C11.6821 14.6673 14.6668 11.6825 14.6668 8.00065C14.6668 4.31875 11.6821 1.33398 8.00016 1.33398C4.31826 1.33398 1.3335 4.31875 1.3335 8.00065C1.3335 11.6825 4.31826 14.6673 8.00016 14.6673Z" stroke={`url(#paint0_linear_257_10023_${id})`} strokeLinecap="round" strokeLinejoin="round" />
            <path d="M5.33324 2H5.9999C4.6999 5.89333 4.6999 10.1067 5.9999 14H5.33324" stroke={`url(#paint1_linear_257_10023_${id})`} strokeLinecap="round" strokeLinejoin="round" />
            <path d="M10 2C11.3 5.89333 11.3 10.1067 10 14" stroke={`url(#paint2_linear_257_10023_${id})`} strokeLinecap="round" strokeLinejoin="round" />
            <path d="M2 10.6667V10C5.89333 11.3 10.1067 11.3 14 10V10.6667" stroke={`url(#paint3_linear_257_10023_${id})`} strokeLinecap="round" strokeLinejoin="round" />
            <path d="M2 6.00039C5.89333 4.70039 10.1067 4.70039 14 6.00039" stroke={`url(#paint4_linear_257_10023_${id})`} strokeLinecap="round" strokeLinejoin="round" />
            <defs>
                <linearGradient id={`paint0_linear_257_10023_${id}`} x1="1.6587" y1="2.66731" x2="15.6722" y2="3.41305" gradientUnits="userSpaceOnUse">
                    <stop stopColor="#622BFD" />
                    <stop offset="1" stopColor="#DA4370" />
                </linearGradient>
                <linearGradient id={`paint1_linear_257_10023_${id}`} x1="5.04868" y1="3.2" x2="6.0763" y2="3.20444" gradientUnits="userSpaceOnUse">
                    <stop stopColor="#622BFD" />
                    <stop offset="1" stopColor="#DA4370" />
                </linearGradient>
                <linearGradient id={`paint2_linear_257_10023_${id}`} x1="10.0238" y1="3.2" x2="11.0514" y2="3.20444" gradientUnits="userSpaceOnUse">
                    <stop stopColor="#622BFD" />
                    <stop offset="1" stopColor="#DA4370" />
                </linearGradient>
                <linearGradient id={`paint3_linear_257_10023_${id}`} x1="2.29268" y1="10.0975" x2="11.1438" y2="15.8946" gradientUnits="userSpaceOnUse">
                    <stop stopColor="#622BFD" />
                    <stop offset="1" stopColor="#DA4370" />
                </linearGradient>
                <linearGradient id={`paint4_linear_257_10023_${id}`} x1="2.29268" y1="5.12289" x2="11.1438" y2="10.92" gradientUnits="userSpaceOnUse">
                    <stop stopColor="#622BFD" />
                    <stop offset="1" stopColor="#DA4370" />
                </linearGradient>
            </defs>
        </svg>
    )
}

export const UpIcon = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
            <path d="M19.9201 15.55L13.4001 9.02999C12.6301 8.25999 11.3701 8.25999 10.6001 9.02999L4.08008 15.55" stroke="white" strokeMiterlimit="10" strokeLinecap="round" strokeLinejoin="round" />
        </svg>
    )
}

export const DownIcon = (props) => {
    return (
        <svg {...props} xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
            <path d="M4.94 5.22668L8 8.28002L11.06 5.22668L12 6.16668L8 10.1667L4 6.16668L4.94 5.22668Z" fill="#BDBDBD" />
        </svg>
    )
}

export const DownAccordionIcon = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
            <path d="M19.9201 9.44922L13.4001 15.9692C12.6301 16.7392 11.3701 16.7392 10.6001 15.9692L4.08008 9.44922" stroke="white" strokeMiterlimit="10" strokeLinecap="round" strokeLinejoin="round" />
        </svg>
    )
}

export const RightIcon = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
            <path d="M6.91211 13.4458L10.7288 9.62079L6.91211 5.79579L8.08711 4.62079L13.0871 9.62079L8.08711 14.6208L6.91211 13.4458Z" fill="#BDBDBD" />
        </svg>
    )
}

export const LeftIcon = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="none">
            <path d="M13.0871 13.5792L9.27044 9.75415L13.0871 5.92915L11.9121 4.75415L6.91211 9.75415L11.9121 14.7542L13.0871 13.5792Z" fill="#BDBDBD" />
        </svg>
    )
}

export const RightCornerArrowIcon = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
            <path d="M19 3.5L5 17.5" stroke="white" strokeMiterlimit="10" strokeLinecap="round" strokeLinejoin="round" />
            <path d="M19 13.77V3.5H8.73" stroke="white" strokeMiterlimit="10" strokeLinecap="round" strokeLinejoin="round" />
        </svg>
    )
}

export const CLeseCircleIcon = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="21" viewBox="0 0 20 21" fill="none">
            <path d="M9.99996 18.8333C14.5833 18.8333 18.3333 15.0833 18.3333 10.5C18.3333 5.91666 14.5833 2.16666 9.99996 2.16666C5.41663 2.16666 1.66663 5.91666 1.66663 10.5C1.66663 15.0833 5.41663 18.8333 9.99996 18.8333Z" stroke="white" strokeLinecap="round" strokeLinejoin="round" />
            <path d="M7.64172 12.8583L12.3584 8.14166" stroke="white" strokeLinecap="round" strokeLinejoin="round" />
            <path d="M12.3584 12.8583L7.64172 8.14166" stroke="white" strokeLinecap="round" strokeLinejoin="round" />
        </svg>
    )
}

export const AddCircleIcon = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="21" viewBox="0 0 20 21" fill="none">
            <path d="M9.99996 18.8333C14.5833 18.8333 18.3333 15.0833 18.3333 10.5C18.3333 5.91666 14.5833 2.16666 9.99996 2.16666C5.41663 2.16666 1.66663 5.91666 1.66663 10.5C1.66663 15.0833 5.41663 18.8333 9.99996 18.8333Z" stroke="white" strokeLinecap="round" strokeLinejoin="round" />
            <path d="M6.66663 10.5H13.3333" stroke="white" strokeLinecap="round" strokeLinejoin="round" />
            <path d="M10 13.8333V7.16666" stroke="white" strokeLinecap="round" strokeLinejoin="round" />
        </svg>
    )
}

export const TypeGamingIcon = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="77" height="18" viewBox="0 0 77 18" fill="none">
            <path d="M0 14.98H14V0.98H0V14.98ZM22.8097 14L24.4801 3.81818H25.4744L23.804 14H22.8097ZM18.1761 11.1761L18.3352 10.1818H25.9318L25.7727 11.1761H18.1761ZM19.2301 14L20.9006 3.81818H21.8949L20.2244 14H19.2301ZM18.7727 7.63636L18.9318 6.64205H26.5284L26.3693 7.63636H18.7727ZM34.9627 7C34.8533 6.66525 34.7092 6.36529 34.5302 6.10014C34.3545 5.83168 34.1441 5.60298 33.8988 5.41406C33.6568 5.22514 33.3817 5.08097 33.0735 4.98153C32.7653 4.8821 32.4272 4.83239 32.0593 4.83239C31.4561 4.83239 30.9076 4.98816 30.4137 5.29972C29.9199 5.61127 29.5271 6.07031 29.2354 6.67685C28.9438 7.28338 28.7979 8.02746 28.7979 8.90909C28.7979 9.79072 28.9454 10.5348 29.2404 11.1413C29.5354 11.7479 29.9348 12.2069 30.4386 12.5185C30.9424 12.83 31.5091 12.9858 32.1388 12.9858C32.7222 12.9858 33.2359 12.8615 33.68 12.6129C34.1275 12.361 34.4755 12.0064 34.7241 11.549C34.976 11.0883 35.1019 10.5464 35.1019 9.9233L35.4798 10.0028H32.4173V8.90909H36.2951V10.0028C36.2951 10.8414 36.1161 11.5705 35.7582 12.1903C35.4035 12.8101 34.913 13.2907 34.2866 13.6321C33.6635 13.9702 32.9476 14.1392 32.1388 14.1392C31.2373 14.1392 30.4452 13.9271 29.7624 13.5028C29.083 13.0786 28.5527 12.4754 28.1715 11.6932C27.7937 10.911 27.6048 9.98295 27.6048 8.90909C27.6048 8.10369 27.7125 7.3795 27.9279 6.73651C28.1467 6.0902 28.4549 5.54001 28.8526 5.08594C29.2504 4.63187 29.721 4.28385 30.2646 4.0419C30.8081 3.79995 31.4064 3.67898 32.0593 3.67898C32.5962 3.67898 33.0967 3.76018 33.5607 3.92258C34.0281 4.08168 34.444 4.30871 34.8086 4.60369C35.1765 4.89536 35.4831 5.24503 35.7283 5.6527C35.9736 6.05705 36.1426 6.50616 36.2354 7H34.9627ZM40.4949 14.179C40.0109 14.179 39.5718 14.0878 39.1774 13.9055C38.783 13.7199 38.4698 13.4531 38.2377 13.1051C38.0057 12.7538 37.8897 12.3295 37.8897 11.8324C37.8897 11.3949 37.9759 11.0402 38.1483 10.7685C38.3206 10.4934 38.551 10.2779 38.8393 10.1222C39.1277 9.96638 39.4458 9.85038 39.7939 9.77415C40.1452 9.6946 40.4982 9.63163 40.8528 9.58523C41.3168 9.52557 41.693 9.48082 41.9814 9.45099C42.273 9.41785 42.4851 9.36316 42.6177 9.28693C42.7536 9.2107 42.8216 9.07812 42.8216 8.8892V8.84943C42.8216 8.3589 42.6873 7.97775 42.4189 7.70597C42.1537 7.43419 41.751 7.2983 41.2108 7.2983C40.6506 7.2983 40.2115 7.42093 39.8933 7.66619C39.5751 7.91146 39.3514 8.1733 39.2221 8.4517L38.1085 8.05398C38.3074 7.58996 38.5725 7.22869 38.9039 6.97017C39.2387 6.70833 39.6033 6.52604 39.9977 6.4233C40.3954 6.31723 40.7865 6.2642 41.171 6.2642C41.4163 6.2642 41.698 6.29403 42.0162 6.35369C42.3377 6.41004 42.6475 6.5277 42.9458 6.70668C43.2475 6.88565 43.4977 7.15578 43.6966 7.51705C43.8954 7.87831 43.9949 8.36222 43.9949 8.96875V14H42.8216V12.9659H42.7619C42.6824 13.1316 42.5498 13.3089 42.3642 13.4979C42.1786 13.6868 41.9316 13.8475 41.6234 13.9801C41.3152 14.1127 40.939 14.179 40.4949 14.179ZM40.6738 13.125C41.1378 13.125 41.5289 13.0339 41.8471 12.8516C42.1686 12.6693 42.4106 12.4339 42.573 12.1456C42.7387 11.8572 42.8216 11.554 42.8216 11.2358V10.1619C42.7718 10.2216 42.6625 10.2763 42.4934 10.326C42.3277 10.3724 42.1355 10.4138 41.9167 10.4503C41.7013 10.4834 41.4908 10.5133 41.2853 10.5398C41.0832 10.563 40.9191 10.5829 40.7931 10.5994C40.4882 10.6392 40.2032 10.7038 39.938 10.7933C39.6762 10.8795 39.4641 11.0104 39.3017 11.1861C39.1426 11.3584 39.063 11.5937 39.063 11.892C39.063 12.2997 39.2138 12.608 39.5154 12.8168C39.8204 13.0223 40.2065 13.125 40.6738 13.125ZM46.1364 14V6.36364H47.2699V7.55682H47.3693C47.5284 7.14915 47.7853 6.83262 48.1399 6.60724C48.4946 6.37855 48.9205 6.2642 49.4176 6.2642C49.9214 6.2642 50.3407 6.37855 50.6754 6.60724C51.0135 6.83262 51.277 7.14915 51.4659 7.55682H51.5455C51.741 7.16241 52.0343 6.84919 52.4254 6.61719C52.8165 6.38187 53.2855 6.2642 53.8324 6.2642C54.5152 6.2642 55.0736 6.47798 55.5078 6.90554C55.942 7.32978 56.1591 7.991 56.1591 8.8892V14H54.9858V8.8892C54.9858 8.32576 54.8317 7.92306 54.5234 7.68111C54.2152 7.43916 53.8523 7.31818 53.4347 7.31818C52.8977 7.31818 52.4818 7.48059 52.1868 7.8054C51.8918 8.12689 51.7443 8.53456 51.7443 9.02841V14H50.5511V8.76989C50.5511 8.3357 50.4103 7.98603 50.1286 7.72088C49.8468 7.45241 49.4839 7.31818 49.0398 7.31818C48.7348 7.31818 48.4498 7.39938 48.1847 7.56179C47.9228 7.72419 47.7107 7.94957 47.5483 8.23793C47.3892 8.52296 47.3097 8.85275 47.3097 9.22727V14H46.1364ZM58.3043 14V6.36364H59.4776V14H58.3043ZM58.9009 5.09091C58.6722 5.09091 58.475 5.01302 58.3093 4.85724C58.1469 4.70147 58.0657 4.5142 58.0657 4.29545C58.0657 4.0767 58.1469 3.88944 58.3093 3.73366C58.475 3.57789 58.6722 3.5 58.9009 3.5C59.1296 3.5 59.3252 3.57789 59.4876 3.73366C59.6533 3.88944 59.7362 4.0767 59.7362 4.29545C59.7362 4.5142 59.6533 4.70147 59.4876 4.85724C59.3252 5.01302 59.1296 5.09091 58.9009 5.09091ZM62.7999 9.40625V14H61.6266V6.36364H62.7601V7.55682H62.8596C63.0385 7.16903 63.3103 6.85748 63.6749 6.62216C64.0395 6.38352 64.5101 6.2642 65.0868 6.2642C65.6039 6.2642 66.0563 6.37027 66.4441 6.58239C66.8319 6.79119 67.1335 7.10938 67.3489 7.53693C67.5643 7.96117 67.6721 8.49811 67.6721 9.14773V14H66.4988V9.22727C66.4988 8.62737 66.343 8.16004 66.0314 7.82528C65.7199 7.48722 65.2923 7.31818 64.7488 7.31818C64.3742 7.31818 64.0395 7.39938 63.7445 7.56179C63.4528 7.72419 63.2225 7.96117 63.0534 8.27273C62.8844 8.58428 62.7999 8.96212 62.7999 9.40625ZM72.8984 17.0227C72.3317 17.0227 71.8445 16.9498 71.4368 16.804C71.0291 16.6615 70.6894 16.4725 70.4176 16.2372C70.1491 16.0052 69.9354 15.7566 69.7763 15.4915L70.7109 14.8352C70.817 14.9744 70.9512 15.1335 71.1136 15.3125C71.276 15.4948 71.4981 15.6522 71.7798 15.7848C72.0649 15.9207 72.4377 15.9886 72.8984 15.9886C73.5149 15.9886 74.0237 15.8395 74.4247 15.5412C74.8258 15.2429 75.0263 14.7756 75.0263 14.1392V12.5881H74.9268C74.8407 12.7273 74.718 12.8996 74.5589 13.1051C74.4032 13.3073 74.1778 13.4879 73.8828 13.647C73.5911 13.8028 73.1967 13.8807 72.6996 13.8807C72.0831 13.8807 71.5296 13.7348 71.0391 13.4432C70.5518 13.1515 70.1657 12.7273 69.8807 12.1705C69.599 11.6136 69.4581 10.9375 69.4581 10.142C69.4581 9.35985 69.5956 8.67874 69.8707 8.09872C70.1458 7.51539 70.5286 7.06463 71.0192 6.74645C71.5097 6.42495 72.0765 6.2642 72.7195 6.2642C73.2166 6.2642 73.611 6.34706 73.9027 6.51278C74.1977 6.67519 74.4231 6.8608 74.5788 7.0696C74.7379 7.27509 74.8606 7.44413 74.9467 7.5767H75.0661V6.36364H76.1996V14.2188C76.1996 14.875 76.0504 15.4086 75.7521 15.8196C75.4571 16.2339 75.0594 16.5372 74.5589 16.7294C74.0618 16.925 73.5083 17.0227 72.8984 17.0227ZM72.8587 12.8267C73.3293 12.8267 73.727 12.719 74.0518 12.5036C74.3767 12.2881 74.6236 11.9782 74.7926 11.5739C74.9616 11.1695 75.0462 10.6856 75.0462 10.1222C75.0462 9.57197 74.9633 9.08641 74.7976 8.66548C74.6319 8.24455 74.3866 7.91477 74.0618 7.67614C73.737 7.4375 73.3359 7.31818 72.8587 7.31818C72.3615 7.31818 71.9472 7.44413 71.6158 7.69602C71.2876 7.94792 71.0407 8.28598 70.875 8.71023C70.7126 9.13447 70.6314 9.60511 70.6314 10.1222C70.6314 10.6525 70.7143 11.1214 70.88 11.5291C71.049 11.9335 71.2976 12.2517 71.6257 12.4837C71.9571 12.7124 72.3681 12.8267 72.8587 12.8267Z" fill="white" />
        </svg>
    )
}


export const TypeMeteverseIcon = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="97" height="15" viewBox="0 0 97 15" fill="none">
            <path d="M0.5 14.98H14.5V0.98H0.5V14.98ZM23.3097 14L24.9801 3.81818H25.9744L24.304 14H23.3097ZM18.6761 11.1761L18.8352 10.1818H26.4318L26.2727 11.1761H18.6761ZM19.7301 14L21.4006 3.81818H22.3949L20.7244 14H19.7301ZM19.2727 7.63636L19.4318 6.64205H27.0284L26.8693 7.63636H19.2727ZM28.5025 3.81818H29.9741L33.4343 12.2699H33.5536L37.0138 3.81818H38.4854V14H37.332V6.2642H37.2326L34.0508 14H32.9371L29.7553 6.2642H29.6559V14H28.5025V3.81818ZM44.0002 14.1591C43.2644 14.1591 42.6297 13.9967 42.0961 13.6719C41.5658 13.3438 41.1564 12.8864 40.8681 12.2997C40.583 11.7098 40.4405 11.0237 40.4405 10.2415C40.4405 9.45928 40.583 8.76989 40.8681 8.1733C41.1564 7.57339 41.5575 7.10606 42.0712 6.77131C42.5882 6.43324 43.1915 6.2642 43.8809 6.2642C44.2786 6.2642 44.6713 6.33049 45.0591 6.46307C45.4469 6.59564 45.7999 6.81108 46.1181 7.10938C46.4363 7.40436 46.6898 7.79545 46.8787 8.28267C47.0676 8.76989 47.1621 9.36979 47.1621 10.0824V10.5795H41.2757V9.56534H45.9689C45.9689 9.13447 45.8828 8.75 45.7104 8.41193C45.5414 8.07386 45.2994 7.80705 44.9846 7.61151C44.673 7.41596 44.3051 7.31818 43.8809 7.31818C43.4135 7.31818 43.0092 7.43419 42.6678 7.66619C42.3297 7.89489 42.0695 8.19318 41.8873 8.56108C41.705 8.92898 41.6138 9.32339 41.6138 9.74432V10.4205C41.6138 10.9972 41.7132 11.486 41.9121 11.8871C42.1143 12.2848 42.3944 12.5881 42.7523 12.7969C43.1103 13.0024 43.5262 13.1051 44.0002 13.1051C44.3084 13.1051 44.5868 13.062 44.8354 12.9759C45.0873 12.8864 45.3044 12.7538 45.4867 12.5781C45.669 12.3991 45.8098 12.1771 45.9093 11.9119L47.0428 12.2301C46.9235 12.6146 46.723 12.9527 46.4412 13.2443C46.1595 13.5327 45.8115 13.758 45.3972 13.9205C44.9829 14.0795 44.5172 14.1591 44.0002 14.1591ZM52.2679 6.36364V7.35795H48.3105V6.36364H52.2679ZM49.464 4.53409H50.6373V11.8125C50.6373 12.1439 50.6853 12.3925 50.7814 12.5582C50.8809 12.7206 51.0068 12.83 51.1593 12.8864C51.315 12.9394 51.4791 12.9659 51.6515 12.9659C51.7807 12.9659 51.8868 12.9593 51.9696 12.946C52.0525 12.9295 52.1188 12.9162 52.1685 12.9062L52.4071 13.9602C52.3276 13.9901 52.2166 14.0199 52.074 14.0497C51.9315 14.0829 51.7509 14.0994 51.5321 14.0994C51.2007 14.0994 50.8759 14.0282 50.5577 13.8857C50.2428 13.7431 49.981 13.526 49.7722 13.2344C49.5667 12.9427 49.464 12.5748 49.464 12.1307V4.53409ZM56.28 14.179C55.7961 14.179 55.3569 14.0878 54.9625 13.9055C54.5681 13.7199 54.2549 13.4531 54.0229 13.1051C53.7909 12.7538 53.6749 12.3295 53.6749 11.8324C53.6749 11.3949 53.7611 11.0402 53.9334 10.7685C54.1058 10.4934 54.3361 10.2779 54.6245 10.1222C54.9128 9.96638 55.231 9.85038 55.579 9.77415C55.9303 9.6946 56.2833 9.63163 56.638 9.58523C57.102 9.52557 57.4782 9.48082 57.7665 9.45099C58.0582 9.41785 58.2703 9.36316 58.4029 9.28693C58.5388 9.2107 58.6067 9.07812 58.6067 8.8892V8.84943C58.6067 8.3589 58.4725 7.97775 58.204 7.70597C57.9389 7.43419 57.5362 7.2983 56.9959 7.2983C56.4358 7.2983 55.9966 7.42093 55.6784 7.66619C55.3603 7.91146 55.1365 8.1733 55.0073 8.4517L53.8936 8.05398C54.0925 7.58996 54.3577 7.22869 54.6891 6.97017C55.0239 6.70833 55.3884 6.52604 55.7828 6.4233C56.1806 6.31723 56.5717 6.2642 56.9561 6.2642C57.2014 6.2642 57.4831 6.29403 57.8013 6.35369C58.1228 6.41004 58.4327 6.5277 58.731 6.70668C59.0326 6.88565 59.2828 7.15578 59.4817 7.51705C59.6806 7.87831 59.78 8.36222 59.78 8.96875V14H58.6067V12.9659H58.5471C58.4675 13.1316 58.3349 13.3089 58.1493 13.4979C57.9637 13.6868 57.7168 13.8475 57.4086 13.9801C57.1003 14.1127 56.7241 14.179 56.28 14.179ZM56.459 13.125C56.923 13.125 57.3141 13.0339 57.6323 12.8516C57.9538 12.6693 58.1957 12.4339 58.3581 12.1456C58.5239 11.8572 58.6067 11.554 58.6067 11.2358V10.1619C58.557 10.2216 58.4476 10.2763 58.2786 10.326C58.1129 10.3724 57.9206 10.4138 57.7019 10.4503C57.4864 10.4834 57.276 10.5133 57.0705 10.5398C56.8683 10.563 56.7042 10.5829 56.5783 10.5994C56.2734 10.6392 55.9883 10.7038 55.7232 10.7933C55.4614 10.8795 55.2492 11.0104 55.0868 11.1861C54.9277 11.3584 54.8482 11.5937 54.8482 11.892C54.8482 12.2997 54.999 12.608 55.3006 12.8168C55.6055 13.0223 55.9917 13.125 56.459 13.125ZM67.8924 6.36364L65.0685 14H63.8754L61.0515 6.36364H62.3242L64.4322 12.4489H64.5117L66.6197 6.36364H67.8924ZM72.3693 14.1591C71.6335 14.1591 70.9988 13.9967 70.4652 13.6719C69.9349 13.3438 69.5256 12.8864 69.2372 12.2997C68.9522 11.7098 68.8097 11.0237 68.8097 10.2415C68.8097 9.45928 68.9522 8.76989 69.2372 8.1733C69.5256 7.57339 69.9266 7.10606 70.4403 6.77131C70.9574 6.43324 71.5606 6.2642 72.25 6.2642C72.6477 6.2642 73.0405 6.33049 73.4283 6.46307C73.8161 6.59564 74.169 6.81108 74.4872 7.10938C74.8054 7.40436 75.0589 7.79545 75.2479 8.28267C75.4368 8.76989 75.5312 9.36979 75.5312 10.0824V10.5795H69.6449V9.56534H74.3381C74.3381 9.13447 74.2519 8.75 74.0795 8.41193C73.9105 8.07386 73.6686 7.80705 73.3537 7.61151C73.0421 7.41596 72.6742 7.31818 72.25 7.31818C71.7827 7.31818 71.3783 7.43419 71.0369 7.66619C70.6989 7.89489 70.4387 8.19318 70.2564 8.56108C70.0741 8.92898 69.983 9.32339 69.983 9.74432V10.4205C69.983 10.9972 70.0824 11.486 70.2812 11.8871C70.4834 12.2848 70.7635 12.5881 71.1214 12.7969C71.4794 13.0024 71.8954 13.1051 72.3693 13.1051C72.6776 13.1051 72.956 13.062 73.2045 12.9759C73.4564 12.8864 73.6735 12.7538 73.8558 12.5781C74.0381 12.3991 74.179 12.1771 74.2784 11.9119L75.4119 12.2301C75.2926 12.6146 75.0921 12.9527 74.8104 13.2443C74.5286 13.5327 74.1806 13.758 73.7663 13.9205C73.352 14.0795 72.8864 14.1591 72.3693 14.1591ZM77.3161 14V6.36364H78.4496V7.51705H78.5291C78.6683 7.1392 78.9202 6.83262 79.2848 6.5973C79.6494 6.36198 80.0604 6.24432 80.5178 6.24432C80.6039 6.24432 80.7116 6.24597 80.8409 6.24929C80.9702 6.2526 81.0679 6.25758 81.1342 6.2642V7.45739C81.0945 7.44744 81.0033 7.43253 80.8608 7.41264C80.7216 7.38944 80.5741 7.37784 80.4183 7.37784C80.0471 7.37784 79.7157 7.45573 79.424 7.61151C79.1357 7.76397 78.907 7.97609 78.7379 8.24787C78.5722 8.51634 78.4893 8.82292 78.4893 9.16761V14H77.3161ZM87.9341 8.07386L86.8801 8.37216C86.8139 8.1965 86.7161 8.0258 86.5868 7.86009C86.4609 7.69105 86.2885 7.55185 86.0698 7.44247C85.851 7.3331 85.571 7.27841 85.2296 7.27841C84.7623 7.27841 84.3728 7.38613 84.0613 7.60156C83.753 7.81368 83.5989 8.08381 83.5989 8.41193C83.5989 8.7036 83.705 8.93395 83.9171 9.10298C84.1292 9.27202 84.4606 9.41288 84.9114 9.52557L86.0449 9.80398C86.7277 9.9697 87.2364 10.2232 87.5712 10.5646C87.906 10.9027 88.0733 11.3385 88.0733 11.8722C88.0733 12.3097 87.9474 12.7008 87.6955 13.0455C87.4469 13.3902 87.0989 13.6619 86.6515 13.8608C86.204 14.0597 85.6837 14.1591 85.0904 14.1591C84.3115 14.1591 83.6668 13.9901 83.1564 13.652C82.646 13.3139 82.3229 12.8201 82.187 12.1705L83.3006 11.892C83.4067 12.303 83.6072 12.6113 83.9022 12.8168C84.2005 13.0223 84.5899 13.125 85.0705 13.125C85.6174 13.125 86.0516 13.009 86.373 12.777C86.6979 12.5417 86.8603 12.2599 86.8603 11.9318C86.8603 11.6667 86.7675 11.4446 86.5819 11.2656C86.3962 11.0833 86.1112 10.9474 85.7267 10.858L84.454 10.5597C83.7547 10.3939 83.2409 10.1371 82.9128 9.78906C82.588 9.43774 82.4256 8.99858 82.4256 8.47159C82.4256 8.04072 82.5466 7.65956 82.7885 7.32812C83.0338 6.99669 83.3669 6.73651 83.7878 6.54758C84.2121 6.35866 84.6926 6.2642 85.2296 6.2642C85.9853 6.2642 86.5785 6.42992 87.0094 6.76136C87.4436 7.0928 87.7518 7.5303 87.9341 8.07386ZM93.0412 14.1591C92.3054 14.1591 91.6707 13.9967 91.1371 13.6719C90.6068 13.3438 90.1974 12.8864 89.9091 12.2997C89.6241 11.7098 89.4815 11.0237 89.4815 10.2415C89.4815 9.45928 89.6241 8.76989 89.9091 8.1733C90.1974 7.57339 90.5985 7.10606 91.1122 6.77131C91.6293 6.43324 92.2325 6.2642 92.9219 6.2642C93.3196 6.2642 93.7124 6.33049 94.1001 6.46307C94.4879 6.59564 94.8409 6.81108 95.1591 7.10938C95.4773 7.40436 95.7308 7.79545 95.9197 8.28267C96.1087 8.76989 96.2031 9.36979 96.2031 10.0824V10.5795H90.3168V9.56534H95.0099C95.0099 9.13447 94.9238 8.75 94.7514 8.41193C94.5824 8.07386 94.3404 7.80705 94.0256 7.61151C93.714 7.41596 93.3461 7.31818 92.9219 7.31818C92.4545 7.31818 92.0502 7.43419 91.7088 7.66619C91.3707 7.89489 91.1106 8.19318 90.9283 8.56108C90.746 8.92898 90.6548 9.32339 90.6548 9.74432V10.4205C90.6548 10.9972 90.7543 11.486 90.9531 11.8871C91.1553 12.2848 91.4354 12.5881 91.7933 12.7969C92.1513 13.0024 92.5672 13.1051 93.0412 13.1051C93.3494 13.1051 93.6278 13.062 93.8764 12.9759C94.1283 12.8864 94.3454 12.7538 94.5277 12.5781C94.71 12.3991 94.8509 12.1771 94.9503 11.9119L96.0838 12.2301C95.9645 12.6146 95.764 12.9527 95.4822 13.2443C95.2005 13.5327 94.8525 13.758 94.4382 13.9205C94.0239 14.0795 93.5582 14.1591 93.0412 14.1591Z" fill="white" />
        </svg>
    )
}


export const TypeAIIcon = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="39" height="15" viewBox="0 0 39 15" fill="none">
            <path d="M0 14.98H14V0.98H0V14.98ZM22.8097 14L24.4801 3.81818H25.4744L23.804 14H22.8097ZM18.1761 11.1761L18.3352 10.1818H25.9318L25.7727 11.1761H18.1761ZM19.2301 14L20.9006 3.81818H21.8949L20.2244 14H19.2301ZM18.7727 7.63636L18.9318 6.64205H26.5284L26.3693 7.63636H18.7727ZM28.4201 14H27.1275L30.8661 3.81818H32.1388L35.8775 14H34.5849L31.5423 5.42898H31.4627L28.4201 14ZM28.8974 10.0227H34.1076V11.1165H28.8974V10.0227ZM38.6964 3.81818V14H37.4634V3.81818H38.6964Z" fill="white" />
        </svg>
    )
}


export const TableStatusIcon = () => {
    const id = Math.round(Math.random() * 10000)
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="19" viewBox="0 0 16 19" fill="none">
            <path fillRule="evenodd" clipRule="evenodd" d="M3.39648 9.64213L8.00022 15.196L12.6447 9.64213L8.00022 4.03906L3.39648 9.64213Z" fill="black" />
            <path fillRule="evenodd" clipRule="evenodd" d="M1.92961 9.64184C3.96667 7.18435 6.00373 4.72687 8.04079 2.26939V0.5L7.02226 1.72874L0.503662 9.59268H1.92961V9.64184Z" fill={`url(#paint0_linear_235_16164_${id})`} />
            <path fillRule="evenodd" clipRule="evenodd" d="M8.0001 2.26953C5.96304 4.72701 3.92598 7.1845 1.88892 9.64198H3.35559L8.0001 4.03892V2.26953Z" fill={`url(#paint1_linear_235_16164_${id})`} />
            <path fillRule="evenodd" clipRule="evenodd" d="M8 4.03892L12.6445 9.64198H14.1112C12.0741 7.1845 10.0371 4.72701 8 2.26953V4.03892Z" fill={`url(#paint2_linear_235_16164_${id})`} />
            <path fillRule="evenodd" clipRule="evenodd" d="M8 2.26907C10.0371 4.72655 12.0741 7.18404 14.1112 9.64152H15.5779L9.05926 1.77757L8.04073 0.548828V2.26907H8Z" fill={`url(#paint3_linear_235_16164_${id})`} />
            <path fillRule="evenodd" clipRule="evenodd" d="M12.6445 9.64258L8 15.2456V17.015C10.0371 14.5575 12.0741 12.1001 14.1112 9.64258H12.6445Z" fill={`url(#paint4_linear_235_16164_${id})`} />
            <path fillRule="evenodd" clipRule="evenodd" d="M14.1112 9.64258C12.0741 12.1001 10.0371 14.5575 8 17.015V18.7844L15.5779 9.64258H14.1112Z" fill={`url(#paint5_linear_235_16164_${id})`} />
            <path fillRule="evenodd" clipRule="evenodd" d="M8.0001 15.1968L3.35559 9.59375H1.88892C3.92598 12.0512 5.96304 14.5087 8.0001 16.9662V15.1968Z" fill={`url(#paint6_linear_235_16164_${id})`} />
            <path fillRule="evenodd" clipRule="evenodd" d="M7.99998 16.9662C5.96292 14.5087 3.92586 12.0512 1.88879 9.59375H0.422119L7.99998 18.7356V16.9662Z" fill={`url(#paint7_linear_235_16164_${id})`} />
            <path fillRule="evenodd" clipRule="evenodd" d="M4.90356 9.64195L7.99989 13.3773L11.137 9.64195L7.99989 5.85742L4.90356 9.64195Z" fill={`url(#paint8_linear_235_16164_${id})`} />
            <path fillRule="evenodd" clipRule="evenodd" d="M4.90389 9.64213L8.00022 5.8576V4.03906L3.39648 9.64213H4.90389Z" fill="#203D6B" />
            <path fillRule="evenodd" clipRule="evenodd" d="M11.1371 9.64258L8 13.3779V15.1965L12.6445 9.64258H11.1371Z" fill="#010716" />
            <path fillRule="evenodd" clipRule="evenodd" d="M8 5.8576L11.1371 9.64213H12.6445L8 4.03906V5.8576Z" fill="#132D54" />
            <path fillRule="evenodd" clipRule="evenodd" d="M8.00022 13.3779L4.90389 9.64258H3.39648L8.00022 15.1965V13.3779Z" fill="#132D54" />
            <defs>
                <linearGradient id={`paint0_linear_235_16164_${id}`} x1="4.96079" y1="5.94588" x2="4.09033" y2="5.22429" gradientUnits="userSpaceOnUse">
                    <stop stopColor="#EFE1BB" />
                    <stop offset="1" stopColor="#EDD4AE" />
                </linearGradient>
                <linearGradient id={`paint1_linear_235_16164_${id}`} x1="5.695" y1="6.83175" x2="4.82459" y2="6.11025" gradientUnits="userSpaceOnUse">
                    <stop stopColor="#523329" />
                    <stop offset="1" stopColor="#A27048" />
                </linearGradient>
                <linearGradient id={`paint2_linear_235_16164_${id}`} x1="11.0585" y1="5.94593" x2="10.1881" y2="6.66738" gradientUnits="userSpaceOnUse">
                    <stop stopColor="#A27048" />
                    <stop offset="1" stopColor="#523329" />
                </linearGradient>
                <linearGradient id={`paint3_linear_235_16164_${id}`} x1="11.7927" y1="5.05959" x2="10.9222" y2="5.78117" gradientUnits="userSpaceOnUse">
                    <stop stopColor="#E2BB7E" />
                    <stop offset="1" stopColor="#ECE2A9" />
                </linearGradient>
                <linearGradient id={`paint4_linear_235_16164_${id}`} x1="11.0585" y1="13.3029" x2="10.188" y2="12.5814" gradientUnits="userSpaceOnUse">
                    <stop stopColor="#EFE1BB" />
                    <stop offset="1" stopColor="#EDD4AE" />
                </linearGradient>
                <linearGradient id={`paint5_linear_235_16164_${id}`} x1="11.7926" y1="14.1886" x2="10.9221" y2="13.4671" gradientUnits="userSpaceOnUse">
                    <stop stopColor="#523329" />
                    <stop offset="1" stopColor="#A27048" />
                </linearGradient>
                <linearGradient id={`paint6_linear_235_16164_${id}`} x1="5.69496" y1="12.4174" x2="4.82459" y2="13.1389" gradientUnits="userSpaceOnUse">
                    <stop stopColor="#8C6C51" />
                    <stop offset="1" stopColor="#DEC2A0" />
                </linearGradient>
                <linearGradient id={`paint7_linear_235_16164_${id}`} x1="4.96081" y1="13.303" x2="4.0903" y2="14.0246" gradientUnits="userSpaceOnUse">
                    <stop stopColor="#A27048" />
                    <stop offset="1" stopColor="#523329" />
                </linearGradient>
                <linearGradient id={`paint8_linear_235_16164_${id}`} x1="8.00944" y1="13.3794" x2="8.00944" y2="5.86863" gradientUnits="userSpaceOnUse">
                    <stop stopColor="#1A2540" />
                    <stop offset="1" stopColor="#101524" />
                </linearGradient>
            </defs>
        </svg>
    )
}

export const InfiniteIcon = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 18 14" fill="none">
            <path d="M10.4162 5.85144C10.4441 5.85884 10.4703 5.87162 10.4934 5.88905C10.4936 5.88922 10.4938 5.88938 10.494 5.88955L10.8923 6.19622L12.0639 7.09839L11.6802 5.67031C11.4317 4.74552 10.9294 3.90871 10.2302 3.25449C9.5309 2.60027 8.66254 2.15474 7.72328 1.96828C6.78402 1.78183 5.81133 1.86188 4.91519 2.19939C4.01905 2.5369 3.23522 3.11841 2.65232 3.87815C2.06943 4.6379 1.71072 5.54557 1.61677 6.49854C1.52282 7.45151 1.69737 8.41175 2.12068 9.2707C2.54399 10.1296 3.19917 10.853 4.01215 11.359C4.82512 11.865 5.76346 12.1335 6.72104 12.1341H6.72133C6.77309 12.1341 6.82369 12.1321 6.86832 12.1299C7.02509 12.2759 7.18835 12.4145 7.35754 12.5454C7.14658 12.5697 6.9341 12.582 6.72112 12.5821L6.7206 12.5821C5.67646 12.5836 4.65281 12.2923 3.76587 11.7414C2.87894 11.1904 2.16424 10.4018 1.70294 9.46508C1.24164 8.52837 1.05221 7.48108 1.15616 6.44213C1.26012 5.40318 1.65328 4.41419 2.29103 3.58744C2.92877 2.7607 3.78554 2.12932 4.76406 1.765C5.74258 1.40068 6.80364 1.31801 7.82678 1.52639C8.84991 1.73476 9.79413 2.22582 10.5522 2.94381C11.3103 3.66181 11.8519 4.57798 12.1155 5.58829L12.3672 6.55267L12.9898 5.77441L13.1898 5.52441L13.1899 5.52448L13.1965 5.51581C13.2143 5.49259 13.2364 5.47309 13.2617 5.45843C13.287 5.44377 13.3149 5.43424 13.3439 5.43038C13.3729 5.42651 13.4024 5.4284 13.4306 5.43592C13.4589 5.44344 13.4854 5.45646 13.5086 5.47422C13.5318 5.49198 13.5513 5.51414 13.566 5.53944C13.5806 5.56473 13.5902 5.59267 13.594 5.62165C13.5979 5.65063 13.596 5.68008 13.5885 5.70834C13.5809 5.73659 13.5679 5.76309 13.5502 5.78631L13.55 5.78657L12.244 7.49657L12.244 7.49656L12.2415 7.49984C12.2063 7.54677 12.1539 7.57784 12.0958 7.58625C12.0385 7.59456 11.9802 7.58012 11.9334 7.54607L10.2246 6.24256C10.2246 6.24255 10.2246 6.24254 10.2246 6.24253C10.2014 6.22485 10.182 6.20278 10.1674 6.17759C10.1527 6.15238 10.1432 6.12453 10.1393 6.09563C10.1354 6.06673 10.1372 6.03735 10.1447 6.00917C10.1522 5.98099 10.1651 5.95455 10.1828 5.93137C10.2005 5.90819 10.2226 5.88872 10.2478 5.87408C10.273 5.85943 10.3009 5.84989 10.3298 5.84601C10.3587 5.84213 10.388 5.84397 10.4162 5.85144ZM11.4948 1.86696C11.3396 1.72268 11.178 1.58561 11.0107 1.45615C11.8642 1.35951 12.7319 1.46099 13.5451 1.75679C14.578 2.13252 15.4768 2.80501 16.1288 3.68984C16.7808 4.57467 17.1568 5.6324 17.2098 6.73022C17.2627 7.82804 16.9901 8.91703 16.4262 9.86046C15.8623 10.8039 15.0323 11.5597 14.0403 12.033C13.0484 12.5063 11.9387 12.676 10.8506 12.5209C9.76252 12.3657 8.74453 11.8925 7.92445 11.1607C7.10437 10.4289 6.51875 9.47121 6.24112 8.40776L5.9894 7.44358L5.3669 8.22171L5.1669 8.47171L5.1668 8.47163L5.15984 8.48074C5.12412 8.52756 5.07126 8.55826 5.01291 8.5661C4.95455 8.57395 4.89546 8.55829 4.84865 8.52256C4.80183 8.48684 4.77113 8.43399 4.76329 8.37563C4.75548 8.31756 4.77095 8.25878 4.80629 8.21208C4.80647 8.21184 4.80665 8.21161 4.80683 8.21137L6.1214 6.50523L6.12142 6.50524L6.12368 6.50225C6.1412 6.47915 6.16312 6.45974 6.18817 6.44514C6.21322 6.43054 6.24091 6.42104 6.26965 6.41718C6.29839 6.41331 6.32761 6.41517 6.35562 6.42264C6.38364 6.43011 6.4099 6.44304 6.4329 6.4607L6.43407 6.46159L8.1358 7.75976C8.17723 7.79638 8.20372 7.84711 8.21 7.90222C8.21655 7.95972 8.20059 8.01751 8.16548 8.06351C8.13036 8.1095 8.07881 8.14012 8.02162 8.14895C7.96703 8.15738 7.91134 8.14533 7.8652 8.11529L7.47638 7.81589L6.30172 6.91141L6.68866 8.34256C6.93875 9.26753 7.4426 10.1041 8.14326 10.7577C8.84392 11.4113 9.71345 11.8559 10.6536 12.0411C11.5937 12.2264 12.5668 12.145 13.4631 11.8061C14.3594 11.4672 15.1429 10.8844 15.7253 10.1235C16.3076 9.36256 16.6655 8.45391 16.7584 7.50024C16.8514 6.54657 16.6757 5.58593 16.2512 4.72689C15.8268 3.86785 15.1704 3.14467 14.3565 2.63912C13.5426 2.13359 12.6035 1.86581 11.6453 1.86606C11.6453 1.86606 11.6452 1.86606 11.6452 1.86606L11.6355 1.86606C11.5921 1.86605 11.5448 1.86605 11.4948 1.86696Z" fill="#F5EFDB" stroke="#F5EFDB" />
        </svg>
    )
}

export const GradientInfiniteIcon = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="21" height="20" viewBox="0 0 21 20" fill="none">
            <path fillRule="evenodd" clipRule="evenodd" d="M11.4763 4.47262C11.3189 4.37467 11.3415 4.1344 11.522 4.09206C12.6858 3.80972 13.9072 3.87751 15.0326 4.28691C16.1581 4.69632 17.1375 5.4291 17.848 6.39324C18.5584 7.35738 18.9682 8.50992 19.0258 9.70615C19.0835 10.9024 18.7865 12.089 18.172 13.117C17.5576 14.145 16.6532 14.9685 15.5723 15.4843C14.4914 16 13.2823 16.1849 12.0967 16.0158C10.911 15.8467 9.8018 15.3311 8.90821 14.5338C8.0944 13.8076 7.49248 12.8772 7.16298 11.8416C7.12291 11.7156 6.95655 11.6809 6.87398 11.7841C6.75782 11.9363 6.58594 12.0361 6.39615 12.0617C6.20636 12.0872 6.01422 12.0362 5.86198 11.9201C5.70975 11.8039 5.6099 11.632 5.58439 11.4422C5.55889 11.2524 5.60982 11.0603 5.72598 10.9081L7.04198 9.20006C7.09934 9.12446 7.17107 9.06094 7.25305 9.01316C7.33504 8.96537 7.42566 8.93427 7.51971 8.92163C7.61375 8.90899 7.70937 8.91507 7.80106 8.93951C7.89275 8.96395 7.97871 9.00628 8.05398 9.06406L9.76598 10.3701C9.91001 10.4894 10.0023 10.6598 10.0234 10.8456C10.0446 11.0315 9.99304 11.2183 9.87954 11.3669C9.76605 11.5156 9.59943 11.6145 9.41459 11.6431C9.22975 11.6716 9.04104 11.6275 8.88798 11.5201C8.75882 11.4206 8.5866 11.5395 8.646 11.6913C8.89807 12.3355 9.29199 12.9173 9.80098 13.3921C10.4334 13.982 11.2183 14.3833 12.0669 14.5506C12.9155 14.7178 13.7939 14.6443 14.6029 14.3384C15.4119 14.0325 16.1192 13.5064 16.6449 12.8196C17.1705 12.1328 17.4935 11.3126 17.5774 10.4517C17.6613 9.59092 17.5027 8.72379 17.1196 7.94838C16.7365 7.17297 16.144 6.5202 15.4093 6.06386C14.6746 5.60752 13.8269 5.36581 12.962 5.36606C12.9585 5.36606 12.9551 5.36606 12.9516 5.36606C12.7428 5.36608 12.5374 5.29106 12.3818 5.15175C12.1001 4.8995 11.7971 4.67228 11.4763 4.47262ZM8.03798 16.0821C8.13179 16.082 8.22551 16.0798 8.31907 16.0754C8.94174 16.0463 9.05085 15.241 8.58909 14.8223C8.45117 14.6972 8.27371 14.6285 8.08759 14.6334C8.07106 14.6338 8.05452 14.6341 8.03798 14.6341C7.17369 14.6336 6.32678 14.3913 5.59301 13.9345C4.85924 13.4778 4.26789 12.8249 3.88582 12.0497C3.50375 11.2744 3.34621 10.4077 3.43101 9.5476C3.51581 8.68747 3.83957 7.86823 4.36567 7.18251C4.89178 6.49678 5.59924 5.97194 6.40807 5.66731C7.2169 5.36268 8.09483 5.29042 8.94258 5.45871C9.79033 5.627 10.5741 6.02912 11.2052 6.61961C11.7131 7.09473 12.1058 7.67656 12.3567 8.3206C12.416 8.47276 12.2434 8.59169 12.114 8.49206C12.0386 8.43454 11.9526 8.39243 11.861 8.36814C11.7693 8.34384 11.6738 8.33784 11.5798 8.35047C11.4858 8.36309 11.3953 8.39411 11.3133 8.44174C11.2313 8.48937 11.1595 8.55268 11.102 8.62806C11.0445 8.70344 11.0024 8.78941 10.9781 8.88106C10.9538 8.97271 10.9478 9.06825 10.9604 9.16222C10.973 9.2562 11.004 9.34676 11.0517 9.42875C11.0993 9.51074 11.1626 9.58254 11.238 9.64006L12.95 10.9461C13.1032 11.0599 13.2952 11.1084 13.4841 11.0811C13.673 11.0537 13.8434 10.9527 13.958 10.8001L15.264 9.09006C15.3216 9.01468 15.3639 8.92868 15.3883 8.83698C15.4127 8.74528 15.4188 8.64966 15.4063 8.5556C15.3937 8.46153 15.3628 8.37086 15.3152 8.28875C15.2676 8.20664 15.2044 8.13471 15.129 8.07706C15.0536 8.01941 14.9676 7.97717 14.8759 7.95275C14.7842 7.92834 14.6886 7.92222 14.5945 7.93476C14.5005 7.94729 14.4098 7.97824 14.3277 8.02581C14.2456 8.07339 14.1736 8.13668 14.116 8.21206C14.0334 8.31525 13.8671 8.28048 13.827 8.15454C13.5158 7.17558 12.9611 6.28956 12.2127 5.58079C11.3867 4.7985 10.358 4.26347 9.24321 4.03644C8.12846 3.80941 6.97239 3.89948 5.90625 4.29642C4.84012 4.69337 3.90663 5.38128 3.21178 6.28205C2.51693 7.18282 2.08856 8.26037 1.9753 9.39235C1.86204 10.5243 2.06843 11.6654 2.57103 12.686C3.07364 13.7066 3.85233 14.5658 4.81869 15.1661C5.78504 15.7664 6.90035 16.0837 8.03798 16.0821Z" fill="url(#paint0_linear_311_23340)" />
            <defs>
                <linearGradient id="paint0_linear_311_23340" x1="2.36184" y1="5.13086" x2="20.2722" y2="6.46932" gradientUnits="userSpaceOnUse">
                    <stop stopColor="#FDCC2B" />
                    <stop offset="1" stopColor="#DAB943" />
                </linearGradient>
            </defs>
        </svg>
    )
}

export const MoreIcon = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
            <path d="M5 10C3.9 10 3 10.9 3 12C3 13.1 3.9 14 5 14C6.1 14 7 13.1 7 12C7 10.9 6.1 10 5 10Z" stroke="white" strokeWidth="1.5" />
            <path d="M19 10C17.9 10 17 10.9 17 12C17 13.1 17.9 14 19 14C20.1 14 21 13.1 21 12C21 10.9 20.1 10 19 10Z" stroke="white" strokeWidth="1.5" />
            <path d="M12 10C10.9 10 10 10.9 10 12C10 13.1 10.9 14 12 14C13.1 14 14 13.1 14 12C14 10.9 13.1 10 12 10Z" stroke="white" strokeWidth="1.5" />
        </svg>
    )
}

export const BackArrow = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none">
            <path d="M13.3333 8.33203C13.3333 9.5687 12.1117 11.4154 10.875 12.9654C9.285 14.9654 7.385 16.7104 5.20667 18.042C3.57334 19.0404 1.59333 19.9987 9.53674e-07 19.9987M9.53674e-07 19.9987C1.59333 19.9987 3.575 20.957 5.20667 21.9554C7.385 23.2887 9.285 25.0337 10.875 27.0304C12.1117 28.582 13.3333 30.432 13.3333 31.6654M9.53674e-07 19.9987H40" stroke="white" strokeWidth="3" />
        </svg>
    )
}

export const HalfEmoji = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="17" viewBox="0 0 16 17" fill="none">
            <path d="M12.7134 3.79997C15.3601 6.44664 15.3134 10.7666 12.58 13.3599C10.0534 15.7533 5.95339 15.7533 3.42006 13.3599C0.680056 10.7666 0.633382 6.44664 3.28671 3.79997C5.88671 1.1933 10.1134 1.1933 12.7134 3.79997Z" stroke="white" strokeLinecap="round" strokeLinejoin="round" />
            <path d="M10.5601 11.2133C9.14677 12.5466 6.85344 12.5466 5.44678 11.2133" stroke="white" strokeLinecap="round" strokeLinejoin="round" />
        </svg>
    )
}
export const Health = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="17" viewBox="0 0 16 17" fill="none">
            <path d="M5.9799 15.1667H9.9799C13.3132 15.1667 14.6466 13.8334 14.6466 10.5V6.50004C14.6466 3.16671 13.3132 1.83337 9.9799 1.83337H5.9799C2.64657 1.83337 1.31323 3.16671 1.31323 6.50004V10.5C1.31323 13.8334 2.64657 15.1667 5.9799 15.1667Z" stroke="white" strokeLinecap="round" strokeLinejoin="round" />
            <path d="M1.31323 8.9667L5.31323 8.95337C5.81323 8.95337 6.37323 9.33337 6.5599 9.80003L7.3199 11.72C7.49323 12.1534 7.76657 12.1534 7.9399 11.72L9.46657 7.8467C9.61323 7.47337 9.88657 7.46003 10.0732 7.81337L10.7666 9.1267C10.9732 9.52003 11.5066 9.84003 11.9466 9.84003H14.6532" stroke="white" strokeLinecap="round" strokeLinejoin="round" />
        </svg>
    )
}
export const Download = () => {
    return (
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="17" viewBox="0 0 16 17" fill="none">
            <path d="M10.96 6.43335C13.36 6.64002 14.34 7.87335 14.34 10.5733V10.66C14.34 13.64 13.1467 14.8333 10.1667 14.8333H5.82665C2.84665 14.8333 1.65332 13.64 1.65332 10.66V10.5733C1.65332 7.89335 2.61999 6.66002 4.97999 6.44002" stroke="white" strokeLinecap="round" strokeLinejoin="round" />
            <path d="M8 1.83337V10.42" stroke="white" strokeLinecap="round" strokeLinejoin="round" />
            <path d="M10.2333 8.93335L7.99994 11.1667L5.7666 8.93335" stroke="white" strokeLinecap="round" strokeLinejoin="round" />
        </svg>
    )
}